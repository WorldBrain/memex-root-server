# variables:
#   S3_BUCKET_NAME: "yourbucket"

stages:
  - build
  - test
  - deploy

build:
  stage: build
  image: node:8
  script:
    - npm install
    - npm run prepare
  artifacts:
    paths:
      - build/
      - node_modules/

test:
  stage: test
  image: node:8
  script:
    - npm run test:mocha
  only:
    - staging
    - production

deploy:
  stage: deploy
  image: ruby:2.5
  environment:
    name: "${CI_COMMIT_REF_NAME}"
  script:
    - echo "Deploying to ${CI_ENVIRONMENT_NAME}"
    - gem install dpl
    - >
      dpl
      --provider=lambda
      --runtime=nodejs8.10
      --access_key_id="${AWS_ACCESS_KEY}"
      --secret_access_key="${AWS_SECRET_KEY}"
      --region=eu-central-1
      --function_name="${LAMBDA_FUNCTION_PREFIX}-${CI_ENVIRONMENT_NAME}"
      --role="${AWS_LAMBDA_ROLE}"
      --module_name="build/main-lambda.js"
      --handler_name="handler"
  only:
    - staging
    - production

# deploy to production:
#   environment: production
#   image: starefossen/ruby-node:2-8-alpine
#   script:
#   
#   - npm run prepare
#   - >
#     dpl
#     --provider=lambda
#     --runtime=nodejs8.10
#     --access_key_id="${AWS_ACCESS_KEY}"
#     --secret_access_key="${AWS_SECRET_KEY}"
#     --region=eu-central-1
#     --function_name="memex-root-service-production"
#     --role="${AWS_LAMBDA_ROLE}"
#     --module_name="build/main-lambda.js"
#     --handler_name="handler"
#   only:
#   - deploy/production

# deploy to staging:
#   environment: staging
#   image: starefossen/ruby-node:2-8-alpine
#   script:
#   - gem install dpl
#   - npm run prepare
#   - >
#     dpl
#     --provider=lambda
#     --runtime=nodejs8.10
#     --access_key_id="${AWS_ACCESS_KEY}"
#     --secret_access_key="${AWS_SECRET_KEY}"
#     --region=eu-central-1
#     --function_name="memex-root-service-staging"
#     --role="${AWS_LAMBDA_ROLE}"
#     --module_name="build/main-lambda.js"
#     --handler_name="handler"
#   only:
#   - deploy/staging
